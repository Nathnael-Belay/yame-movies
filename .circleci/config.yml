# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
# circleci/python:3.6.1
version: 2
jobs:
 build:
   docker:
     # DLC does nothing here, its caching depends on commonality of the image layers.
     - image: circleci/python:3.6.1
   steps:
     - checkout
     - setup_remote_docker:
         docker_layer_caching: true
     # DLC will explicitly cache layers here and try to avoid rebuilding.
     - run: docker build .

    working_directory: ~/streamlit-recommendation

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run pytest
          command: |
            . venv/bin/activate
            pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports